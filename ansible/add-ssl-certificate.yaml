## Input:
# - ntfy_url: the url of the ntfy server
# - ntfy_topic: the topic of the ntfy server
# - cf_token: the cloudflare token
# - cf_zone_id: the cloudflare zone id
# - sites: the sites to issue the certificate with the '-d' prefix, e.g: -d example.com -d www.example.com
# - reloadcmd: the command to reload the service after the certificate is issued
#               e.g: 'sudo systemctl restart nginx' for ubuntu or 'rc-service nginx restart' for alpine
#
- name: add ssl certificate
  delegate_to: "{{ container_hostname }}"
  block:
    - name: create ssl directory
      file:
        path: /usr/ssl
        state: directory

    - name: install acme.sh
      become: yes
      shell: |
        curl https://get.acme.sh | sh
      args:
        creates: /root/.acme.sh

    - name: register notification
      shell: |
        export NTFY_URL={{ ntfy_url }}
        export NTFY_TOPIC={{ ntfy_topic }}
        /root/.acme.sh/acme.sh --set-notify --notify-hook ntfy
      ignore_errors: yes

    - name: issue certificate
      shell: |
        export CF_Token="{{ cf_token }}"
        export CF_Zone_ID="{{ cf_zone_id }}"
        /root/.acme.sh/acme.sh --issue \
        {{ sites }} \
        --force \
        --dns dns_cf \
        --server letsencrypt.org  \
        --key-file /usr/ssl/certificate.key \
        --fullchain-file /usr/ssl/fullchain.crt \
        --reloadcmd "{{ reloadcmd }}"
      args:
        creates: /usr/ssl/fullchain.crt
# --server letsencrypt.org
# --staging