## install local software and config nodes

- name: configure vm
  hosts: 'k8s-nodes'
  tasks: 

    - name: update system
      become: yes
      apt:
        update_cache: yes
        upgrade     : dist
        autoremove  : yes
        autoclean   : yes

    - name: install packages
      become: yes
      ansible.builtin.apt:
        name: 
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
          - btop
          - python3-kubernetes
        state: present
        
    - name: Disable swap for current session
      command: swapoff -a

    - name: Remove Swap entry from /etc/fstab
      become: true
      ansible.builtin.lineinfile:
        dest: /etc/fstab
        regexp: swap
        state: absent

    - name: update ip-tables for containerd
      become: true
      ansible.builtin.lineinfile:
        path: /etc/modules-load.d/k8s.conf 
        line: "{{ item }}"
        create: yes
      with_items:
        - 'overlay'
        - 'br_netfilter'

    - name: refresh ip drivers
      become: true
      ansible.builtin.command: "{{ item }}"
      with_items: 
        - modprobe overlay
        - modprobe br_netfilter

    - name: Configure sysctl params for Kubernetes.
      become: true
      ansible.builtin.lineinfile:
        path: /etc/sysctl.d/99-kubernetes-cri.conf 
        line: "{{ item }}"
        create: yes
      with_items:
        - 'net.bridge.bridge-nf-call-iptables  = 1'
        - 'net.ipv4.ip_forward                 = 1'
        - 'net.bridge.bridge-nf-call-ip6tables = 1'

        # fix too many inotify watches error in grafana alloy
        # 
        - 'fs.inotify.max_user_watches = 524288'
        - 'fs.inotify.max_user_instances = 512'

    - name: Apply sysctl params without reboot
      become: true
      command: sysctl --system

    ## Update /etc/hosts with node information
    ##
    - name: Get all nodes information
      set_fact:
        nodes_info: "{{ groups['k8s-nodes'] | map('extract', hostvars) | list }}"

    - name: Create hosts entries
      set_fact:
        hosts_entries: >-
          {% for node in nodes_info %}
          {{ node.internal_ip }} {{ node.inventory_hostname }}
          {% endfor %}

    - name: Display hosts entries to be added
      debug:
        var: hosts_entries
        verbosity: 1

    - name: Add marker lines to /etc/hosts if not present
      become: true
      blockinfile:
        path: /etc/hosts
        block: |
          # Kubernetes cluster nodes - managed by Ansible
          {% for node in nodes_info %}
          {{ node.internal_ip }} {{ node.inventory_hostname }}
          {% endfor %}
        marker: "# {mark} ANSIBLE MANAGED KUBERNETES NODES"
        state: present

    - name: Add load balancer entry to /etc/hosts
      become: true
      lineinfile:
        path: /etc/hosts
        regexp: '.*kubernetes.local$'
        line: "{{ hostvars[groups['control-nodes'][0]].public_ip }} kubernetes.local"
        state: present

    ## containerd setup, versions see in 0-deploy-cluster.yaml
    ##
    - import_tasks: ./libs/1-install-containerd.yaml

    ## kube setup, version see in 0-deploy-cluster.yaml
    ##
    - import_tasks: ./libs/2-install-k8s-packages.yaml

