loki:
  auth_enabled  : false 
  commonConfig:
    replication_factor: 1
  schemaConfig:
    configs:
      - from: "2025-04-01"
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: loki_index_
          period: 24h

  pattern_ingester:
      enabled: true
  limits_config:
    allow_structured_metadata: true
    volume_enabled: true
    retention_period: 48h 

  storage:
    type: s3
    bucketNames:
        chunks: 'loki-chunks'
        ruler: 'loki-ruler'
        admin: 'loki-admin'
    s3:
      # s3 URL can be used to specify the endpoint, access key, secret key, and bucket name this works well for S3 compatible storages or are hosting Loki on-premises and want to use S3 as the storage backend. Either use the s3 URL or the individual fields below (AWS endpoint, region, secret).
      s3: s3://{{ minio_console_user }}:{{ minio_console_password }}@minio.minio

      # Forces the path style for S3 (true/false)
      s3ForcePathStyle: true

      # Allows insecure (HTTP) connections (true/false)
      insecure: false
      
      # HTTP configuration settings
      http_config: 
        insecure_skip_verify: true

chunksCache:
  allocatedMemory: 1024

# Disable minio storage
minio:
  enabled: false

deploymentMode: SingleBinary

singleBinary:
  replicas: 1
  persistence:
    enabled: false

  # Configure emptyDir volumes with size limit
  extraVolumes:
    - name: storage
      emptyDir:
        sizeLimit: 1Gi   # Limit to 1GB

  extraVolumeMounts:
    - name: storage
      mountPath: /var/loki

# Zero out replica counts of other deployment modes
backend:
  replicas: 0
read:
  replicas: 0
write:
  replicas: 0

ingester:
  replicas: 0
querier:
  replicas: 0
queryFrontend:
  replicas: 0
queryScheduler:
  replicas: 0
distributor:
  replicas: 0
compactor:
  replicas: 0
indexGateway:
  replicas: 0
bloomCompactor:
  replicas: 0
bloomGateway:
  replicas: 0